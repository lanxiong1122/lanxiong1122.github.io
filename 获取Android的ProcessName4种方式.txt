//1 通用的获取方法，但getRunningAppProcesses较敏感导致用户画像问题，获取手机全部的（getRunningAppProcesses方式）
    public String getProcessName(Context context) {
        if (context == null) return null;
        ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
        for (ActivityManager.RunningAppProcessInfo processInfo : manager.getRunningAppProcesses()) {
            if (processInfo.pid == android.os.Process.myPid()) {
                return processInfo.processName;
            }
        }
        return null;
    }
    //2 应用程序的进程与主线程进程相同情况，不适用多进程(getApplicationInfo方式)
    public String getMainProcessName(Context context) {
        if (context == null) return null;

        int pid = android.os.Process.myPid();
        String packageName = context.getPackageName();
        PackageManager packageManager = context.getPackageManager();

        try {
            ApplicationInfo applicationInfo = packageManager.getApplicationInfo(packageName, 0);
            if (applicationInfo != null) {
                return applicationInfo.processName;
            }
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }

        return null;
    }
   //2.1 跟getApplicationInfo方式一样（getPackageInfo方式）
   public String getProcessName(Context context) {
        if (context == null) return null;

        int pid = android.os.Process.myPid();
        String packageName = context.getPackageName();
        PackageManager packageManager = context.getPackageManager();

        try {
            PackageInfo packageInfo = packageManager.getPackageInfo(packageName, PackageManager.GET_ACTIVITIES);
            if (packageInfo != null && packageInfo.applicationInfo != null) {
                return packageInfo.applicationInfo.processName;
            }
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }

        return null;
    }
    //3  getRunningServices() 方法在 Android 5.0（API 级别 21）及以上版本上已被标记为不推荐使用，并且在 Android 9.0（API 级别 28）及以上版本上只返回调用者包名的服务信息(getRunningServices方式)
    public String get21to28ProcessName(Context context) {
        if (context == null) return null;

        int pid = android.os.Process.myPid();
        ActivityManager manager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);

        List<ActivityManager.RunningServiceInfo> runningServices = manager.getRunningServices(Integer.MAX_VALUE);
        if (runningServices != null) {
            for (ActivityManager.RunningServiceInfo serviceInfo : runningServices) {
                if (serviceInfo.pid == pid) {
                    return serviceInfo.process;
                }
            }
        }

        return null;
    }
    //4 Android 9 及以上版本(Application#getProcessName方式)
    private String get28UpProcessName(){
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
            String processName = getProcessName();
            if (processName != null){
                return processName;
            }
        }
        return null;
    }

        // 设置Android 9 及以上版本的webview目录
         String packageName = this.getPackageName();
                if (!packageName.equals(getProcessName)) {
                    WebView.setDataDirectorySuffix(processName);
                }